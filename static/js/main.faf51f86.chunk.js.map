{"version":3,"sources":["components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/Logo/logo.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","paddingRight","position","zIndex","className","onClick","Logo","options","max","src","logo","alt","Rank","name","entries","boxes","length","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","FaceRecognition","imageUrl","id","width","height","map","box","index","key","top","topRow","bottom","bottomRow","left","leftCol","right","rightCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onChangeKey","which","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","res","json","user","loadUser","alert","this","htmlFor","onKeyPress","React","Component","Register","newEmail","newPassword","onNameChange","newName","onSubmitRegister","catch","err","console","log","ParticlesSetting","particles","collisions","enable","number","density","value_area","size","random","anim","speed","size_min","move","direction","out_mode","interactivity","events","onclick","mode","onhover","initialState","input","route","joined","App","response","data","status","count","Object","assign","calculateFaceLocation","displayFaceBox","faces","outputs","regions","image","document","getElementById","Number","face","clarifyFace","region_info","bounding_box","left_col","top_row","right_col","bottom_row","profile","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.faf51f86.chunk.js","sourcesContent":["import React from 'react';\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    return (\r\n        isSignedIn\r\n            ? <nav style={{ display:'flex', justifyContent:'flex-end', paddingRight:'15px', position: 'relative', zIndex: 0 }}>\r\n                <p className='f3-l f4 link dim black underline pa3 pb0 pr1 pointer'\r\n                    onClick={() => onRouteChange('signout')}>\r\n                    Sign Out</p>\r\n            </nav>\r\n            : <nav style={{ display:'flex', justifyContent:'flex-end',paddingRight:'15px', position: 'relative', zIndex: 0}}>\r\n                <p className='f3-l f4 link dim black underline pa3 pb0 pr1 pointer'\r\n                    onClick={() => onRouteChange('signin')}>\r\n                    Sign In</p>\r\n                <p className='f3-l f4 link dim black underline pa3 pb0 pr0 pointer'\r\n                    onClick={() => onRouteChange('register')}>\r\n                    Register</p>\r\n            </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport logo from './logo.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='mb1-l mb4 ml5-l mt0'>\r\n            <Tilt className=\"Tilt ml4 br2 shadow-2 w4-l w3\" options={{ max: 50 }}>\r\n                <div className=\"Tilt-inner\">\r\n                    <img src= {logo} alt= 'logo'/>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nconst Rank = ({ name, entries, boxes }) => {\r\n    return (\r\n        <div className='pv3-l pv2 ph6-l ph3 mt0-l mt5 mw9-l mw7 dib br4 shadow-5'>\r\n            <div className='pt1-l pa0 white f3-l f5'>\r\n                {`${name}, your current entry count is`}\r\n            </div>\r\n            <div className='black f1-l f2 mv3'>\r\n                {entries}\r\n            </div>\r\n            <div className='pt1 white f3-l f5'>\r\n                {\r\n                    boxes.length === 1 \r\n                    ? `${boxes.length} face found in the picture`\r\n                    : `${boxes.length} faces found in the picture`\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './ImageLinkForm.css'\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n    return (\r\n        <div style={{ position: 'relative', zIndex: 1}}>\r\n            <p className='f3-l f4 ph0-l ph4'>\r\n                {'This Magic Brain will detect faces in your pictures.'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form pa4-l pa3 br3 shadow-5 w-40-l w-50 center'>\r\n                    <input className='f4 br1 b--white pa2 w-70 center'\r\n                        type='text'\r\n                        onChange={onInputChange} />\r\n                    <button className=\r\n                        'f4-l f5 tc w-30 grow link br2 ph3-l ph2 pv2 white bg-light-red ba b--white'\r\n                        onClick={onButtonSubmit}>\r\n                        {'Detect'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, boxes }) => {\r\n    return (\r\n        <div className='center mt2'>\r\n            <div className='absolute mt2 mh0-l mh5'>\r\n                <img id='inputImage' alt='' src={imageUrl} width='700' height='auto' />\r\n                {\r\n                    boxes.map( (box, index) => {\r\n                        return <div\r\n                            key={index}\r\n                            className='bounding-box pb5'\r\n                            style={{ top: box.topRow, bottom: box.bottomRow, left: box.leftCol, right: box.rightCol }}></div>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nclass SignIn extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({ signInEmail: event.target.value })\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({ signInPassword: event.target.value })\r\n    }\r\n\r\n    onChangeKey = (event) => {\r\n        if (event.which === 13) {\r\n            this.onSubmitSignIn()\r\n        }\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch(' https://safe-earth-86770.herokuapp.com/signin', {\r\n            method: 'post',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(user => {\r\n                if (user.id) {\r\n                    this.props.loadUser(user);\r\n                    this.props.onRouteChange('home')\r\n                } else {\r\n                    alert('Wrong email and password combination.');\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n            <article className=\"br3 ba b--black-20 mt5 shadow-5 center w-25-l w-75 \" style={{ position: 'relative', zIndex: 1 }}>\r\n                <main className=\"pa4-l pa2 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1-l f2 fw6 ph1 mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input\r\n                                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"email\" name=\"email-address\" id=\"email-address\"\r\n                                    onChange={this.onEmailChange} \r\n                                    onKeyPress={this.onChangeKey}\r\n                                    />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                                    type=\"password\" name=\"password\" id=\"password\"\r\n                                    onChange={this.onPasswordChange}\r\n                                    onKeyPress={this.onChangeKey}\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                                type=\"submit\"\r\n                                onClick={this.onSubmitSignIn}\r\n                                value=\"Sign in\" />\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p onClick={() => onRouteChange('register')} className=\"f5 center pv1 mw4 mt3 link shadow-hover black db pointer\">Register</p>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newEmail : '',\r\n            newPassword : '',\r\n            newName: ''\r\n        }\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({newEmail : event.target.value})\r\n    }\r\n    \r\n    onPasswordChange = (event) => {\r\n        this.setState({newPassword : event.target.value})\r\n    }\r\n    \r\n    onNameChange = (event) => {\r\n        this.setState({newName : event.target.value})\r\n    }\r\n\r\n    onChangeKey = (event) => {\r\n        if (event.which === 13) {\r\n            this.onSubmitRegister()\r\n        }\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        fetch(' https://safe-earth-86770.herokuapp.com/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.newEmail,\r\n                password: this.state.newPassword,\r\n                name: this.state.newName\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then(user => {\r\n            if(user.id){\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('signin');\r\n            } else if(user === 'duplicate'){\r\n                alert('Your email has been registered');\r\n            } else if (user === 'blank') {\r\n                alert ('Can not register with any empty blank.')\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <article className=\"br3 ba b--black-20 mv4 w-25-l w-75 shadow-5 mw6 center\" style={{ position: 'relative', zIndex: 1}}>\r\n                <main className=\"pa4-l pa2 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">User Name</label>\r\n                                <input \r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"text\" name=\"name\" id=\"name\" \r\n                                onChange={this.onNameChange}\r\n                                onKeyPress={this.onChangeKey}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input \r\n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"email\" name=\"email-address\" id=\"email-address\" \r\n                                onChange={this.onEmailChange}\r\n                                onKeyPress={this.onChangeKey}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input \r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \r\n                                type=\"password\" name=\"password\" id=\"password\" \r\n                                onChange={this.onPasswordChange}\r\n                                onKeyPress={this.onChangeKey}\r\n                                />\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input className=\"tc b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                            type=\"text\" \r\n                            onClick= {this.onSubmitRegister}\r\n                            value=\"Register\" />\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport './App.css';\n\nconst ParticlesSetting = {\n\n  particles: {\n    collisions: {\n      enable: true,\n    },\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    },\n    size: {\n      value: 5,\n      random: true,\n      anim: {\n        speed: 3,\n        size_min: 0.3\n      }\n    },\n    move: {\n      random: true,\n      speed: 1,\n      direction: \"none\",\n      out_mode: \"out\"\n    }\n  },\n  interactivity: {\n    events: {\n      onclick: {\n        enable: true,\n        mode: \"push\"\n      },\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  boxes: [],\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    fetch(' https://safe-earth-86770.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ input: this.state.input })\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.status) {\n          fetch(' https://safe-earth-86770.herokuapp.com/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ id: this.state.user.id })\n          })\n            .then(data => data.json())\n            .then(count => this.setState(Object.assign(this.state.user, { entries: count })))\n            .catch(console.log)\n        }\n        return this.calculateFaceLocation(data)\n      })\n      .then(data => this.displayFaceBox(data))\n      .catch(err => {\n        console.log(err);\n        alert('Did not detect any valid human face. Please try again.')\n      });\n  }\n\n  calculateFaceLocation = (data) => {\n    const faces = data.outputs[0].data.regions;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return faces.map(face => {\n      let clarifyFace = face.region_info.bounding_box;\n      return {\n        leftCol: clarifyFace.left_col * width,\n        topRow: clarifyFace.top_row * height,\n        rightCol: width * (1 - clarifyFace.right_col),\n        bottomRow: height * (1 - clarifyFace.bottom_row)\n      }\n    })\n  }\n\n  displayFaceBox = (boxes) => {\n    this.setState({ boxes: boxes });\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route });\n  }\n\n  loadUser = (profile) => {\n    this.setState({\n      user: {\n        id: profile.id,\n        name: profile.name,\n        email: profile.email,\n        entries: profile.entries,\n        joined: profile.joined\n      }\n    })\n  }\n\n  render() {\n    const { imageUrl, boxes, route, isSignedIn } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={ParticlesSetting} />\n        {\n          route === 'home'\n            ? <div>\n              <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} boxes={this.state.boxes} />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit} />\n              <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\n            </div>\n            : (\n              route === 'signin'\n                ? <div>\n                  <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n                  <SignIn onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n                </div>\n                : <div>\n                  <Navigation onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} />\n                  <Register onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n                </div>\n            )\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.42ec6a6c.png\";"],"sourceRoot":""}